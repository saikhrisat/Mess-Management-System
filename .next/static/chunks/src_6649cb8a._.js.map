{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border bg-background/90 backdrop-blur-sm px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/student/meals/attendance/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { ChartContainer, ChartTooltip, ChartTooltipContent } from '@/components/ui/chart';\nimport { Bar, BarChart, Pie, PieChart, ResponsiveContainer, XAxis, YAxis, Label, Cell } from 'recharts';\nimport { Utensils, UserCheck, TrendingUp, TrendingDown, Info } from 'lucide-react';\nimport type { ChartConfig } from '@/components/ui/chart';\n\n\nconst LoadingSkeleton = () => (\n  <div className=\"space-y-8 animate-pulse\">\n    <div className=\"space-y-2\">\n      <div className=\"h-8 w-1/3 bg-muted rounded-lg\"></div>\n      <div className=\"h-5 w-1/2 bg-muted rounded-lg\"></div>\n    </div>\n    <div className=\"grid grid-cols-1 gap-8 lg:grid-cols-2\">\n      <div className=\"h-[450px] bg-muted rounded-xl\"></div>\n      <div className=\"h-[450px] bg-muted rounded-xl\"></div>\n    </div>\n  </div>\n);\n\n\nexport default function AttendancePage() {\n  const [isClient, setIsClient] = useState(false);\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  const attendanceData = useMemo(() => {\n    if (!isClient) return null;\n\n    const totalMealsInMonth = 30 * 3;\n    const mealsTaken = 68;\n    const daysPresent = 24;\n    const daysAbsent = 4;\n    const mealConsumptionPercentage = Math.round((mealsTaken / totalMealsInMonth) * 100);\n\n    const mealConsumptionChartData = [\n      { name: 'taken', value: mealsTaken, fill: 'hsl(var(--primary))' },\n      { name: 'missed', value: totalMealsInMonth - mealsTaken, fill: 'hsl(var(--muted))' }\n    ];\n\n    const messAttendanceChartData = [\n      { name: 'Present', value: daysPresent, fill: 'hsl(140, 70%, 40%)' },\n      { name: 'Absent', value: daysAbsent, fill: 'hsl(var(--destructive))' },\n    ];\n    \n     const mealChartConfig = {\n      meals: {\n        label: \"Meals\",\n      },\n      taken: {\n        label: \"Taken\",\n        color: \"hsl(var(--primary))\",\n      },\n      missed: {\n        label: \"Missed\",\n        color: \"hsl(var(--muted))\",\n      },\n    } satisfies ChartConfig;\n\n    const attendanceChartConfig = {\n       attendance: {\n        label: \"Days\",\n      },\n      Present: {\n        label: 'Present',\n        color: 'hsl(140, 70%, 40%)',\n      },\n      Absent: {\n        label: 'Absent',\n        color: 'hsl(var(--destructive))',\n      },\n    } satisfies ChartConfig;\n\n\n    return {\n      mealsTaken,\n      totalMealsInMonth,\n      daysPresent,\n      daysAbsent,\n      mealConsumptionPercentage,\n      mealConsumptionChartData,\n      messAttendanceChartData,\n      mealChartConfig,\n      attendanceChartConfig\n    };\n  }, [isClient]);\n\n  if (!isClient || !attendanceData) {\n    return <LoadingSkeleton />;\n  }\n  \n  const { \n    mealsTaken, \n    totalMealsInMonth, \n    daysPresent, \n    daysAbsent, \n    mealConsumptionPercentage,\n    mealConsumptionChartData, \n    messAttendanceChartData,\n    mealChartConfig,\n    attendanceChartConfig\n  } = attendanceData;\n\n  return (\n    <div className=\"space-y-8\">\n      <div>\n        <h1 className=\"text-3xl md:text-4xl font-bold font-headline tracking-tight\">Attendance Overview</h1>\n        <p className=\"text-muted-foreground\">A dynamic summary of your meal and mess attendance.</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 gap-8 lg:grid-cols-2\">\n        {/* Meal Consumption Card */}\n        <Card className=\"bg-card/80 backdrop-blur-sm shadow-xl border-0 transform transition-transform duration-300 hover:-translate-y-1 flex flex-col\">\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n                <Utensils className=\"h-6 w-6 text-primary\" /> Meal Consumption\n              </CardTitle>\n               <div className=\"flex items-center text-xs text-muted-foreground mt-2 cursor-pointer\" title=\"This data is managed by the mess manager.\">\n                  <Info className=\"h-3 w-3 mr-1\"/> Read-only\n                </div>\n            </div>\n            <CardDescription>Your meal activity for the current month.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"flex-grow flex flex-col justify-center items-center gap-6\">\n            <div className=\"w-full h-[250px]\">\n              <ChartContainer config={mealChartConfig} className=\"h-full w-full\">\n                <PieChart>\n                  <ChartTooltip content={<ChartTooltipContent nameKey=\"name\" hideLabel />} />\n                  <Pie\n                    data={mealConsumptionChartData}\n                    dataKey=\"value\"\n                    nameKey=\"name\"\n                    innerRadius={80}\n                    outerRadius={100}\n                    startAngle={90}\n                    endAngle={450}\n                    cy=\"50%\"\n                  >\n                    <Label\n                      content={({ viewBox }) => {\n                        if (viewBox && 'cx' in viewBox && 'cy' in viewBox) {\n                          return (\n                            <>\n                              <text x={viewBox.cx} y={viewBox.cy} textAnchor=\"middle\" dominantBaseline=\"middle\">\n                                <tspan\n                                  x={viewBox.cx}\n                                  y={viewBox.cy}\n                                  className=\"text-4xl font-bold font-headline fill-foreground\"\n                                >\n                                  {mealConsumptionPercentage.toFixed(0)}%\n                                </tspan>\n                              </text>\n                            </>\n                          );\n                        }\n                        return null;\n                      }}\n                    />\n                  </Pie>\n                </PieChart>\n              </ChartContainer>\n            </div>\n            <div className=\"text-center\">\n              <p className=\"text-2xl font-bold\">{mealsTaken}</p>\n              <p className=\"text-muted-foreground\">Meals taken out of {totalMealsInMonth}</p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Mess Presence Card */}\n        <Card className=\"bg-card/80 backdrop-blur-sm shadow-xl border-0 transform transition-transform duration-300 hover:-translate-y-1 flex flex-col\">\n          <CardHeader>\n             <div className=\"flex items-center justify-between\">\n              <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n                <UserCheck className=\"h-6 w-6 text-primary\" /> Mess Presence\n              </CardTitle>\n                <div className=\"flex items-center text-xs text-muted-foreground mt-2 cursor-pointer\" title=\"This data is managed by the mess manager.\">\n                  <Info className=\"h-3 w-3 mr-1\"/> Read-only\n                </div>\n            </div>\n            <CardDescription>Your presence record for the current month.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"flex-grow flex flex-col justify-center items-center gap-6\">\n             <div className=\"grid grid-cols-2 gap-6 text-center w-full\">\n                <div className=\"p-4 rounded-lg bg-green-500/10\">\n                    <TrendingUp className=\"h-8 w-8 text-green-500 mx-auto mb-2\" />\n                    <p className=\"text-4xl font-bold font-headline text-green-500\">{daysPresent}</p>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Days Present</p>\n                </div>\n                <div className=\"p-4 rounded-lg bg-red-500/10\">\n                    <TrendingDown className=\"h-8 w-8 text-destructive mx-auto mb-2\" />\n                    <p className=\"text-4xl font-bold font-headline text-destructive\">{daysAbsent}</p>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Days Absent</p>\n                </div>\n            </div>\n            <div className=\"w-full h-[150px] mt-4\">\n               <ChartContainer config={attendanceChartConfig} className=\"h-full w-full\">\n                <BarChart accessibilityLayer data={messAttendanceChartData} layout=\"vertical\" margin={{ left: 10 }}>\n                  <XAxis type=\"number\" hide />\n                  <YAxis\n                    dataKey=\"name\"\n                    type=\"category\"\n                    tickLine={false}\n                    axisLine={false}\n                    tick={{ fill: 'hsl(var(--foreground))', fontSize: 14 }}\n                    className=\"capitalize\"\n                  />\n                  <ChartTooltip content={<ChartTooltipContent hideLabel />} />\n                  <Bar dataKey=\"value\" radius={5} layout=\"vertical\">\n                    {messAttendanceChartData.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={entry.fill} />\n                    ))}\n                  </Bar>\n                </BarChart>\n              </ChartContainer>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}