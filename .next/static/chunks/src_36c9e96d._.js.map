{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/header.tsx"],"sourcesContent":["'use client';\n\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Utensils } from 'lucide-react';\n\nexport function Header() {\n  return (\n    <header className=\"sticky top-0 z-50 w-full border-b border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n      <div className=\"container mx-auto flex h-16 max-w-screen-2xl items-center justify-between px-4 sm:px-6 lg:px-8\">\n        <Link href=\"/\" className=\"flex items-center gap-2\">\n          <Utensils className=\"h-7 w-7 text-primary\" />\n          <span className=\"text-xl font-bold font-headline text-foreground\">MessMate</span>\n        </Link>\n        <nav className=\"hidden md:flex items-center gap-6 text-sm font-medium\">\n          <Link href=\"#about\" className=\"transition-colors hover:text-primary\">About</Link>\n          <Link href=\"#reviews\" className=\"transition-colors hover:text-primary\">Reviews</Link>\n          <Link href=\"#contact\" className=\"transition-colors hover:text-primary\">Contact</Link>\n        </nav>\n        <div className=\"flex items-center gap-4\">\n          <Button variant=\"ghost\" asChild>\n            <Link href=\"/login\">Login</Link>\n          </Button>\n          <Button asChild className=\"font-bold\">\n            <Link href=\"/register\">Register</Link>\n          </Button>\n        </div>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS;IACd,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,+JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;;sCACvB,6LAAC,6MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC;4BAAK,WAAU;sCAAkD;;;;;;;;;;;;8BAEpE,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,+JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAS,WAAU;sCAAuC;;;;;;sCACrE,6LAAC,+JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAW,WAAU;sCAAuC;;;;;;sCACvE,6LAAC,+JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAW,WAAU;sCAAuC;;;;;;;;;;;;8BAEzE,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAQ,OAAO;sCAC7B,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;0CAAS;;;;;;;;;;;sCAEtB,6LAAC,qIAAA,CAAA,SAAM;4BAAC,OAAO;4BAAC,WAAU;sCACxB,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;0CAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMnC;KAxBgB","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/dev-actions.ts"],"sourcesContent":["\n'use server';\n\nimport { getAllTables } from '@/lib/db';\n\nexport async function getDatabaseTables() {\n  try {\n    const data = getAllTables();\n    return { success: true, data };\n  } catch (error) {\n    console.error(\"Error fetching database tables:\", error);\n    if (error instanceof Error) {\n        return { success: false, error: error.message };\n    }\n    return { success: false, error: 'An unknown error occurred while fetching database data.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAKsB,oBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 528, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dev-db-viewer.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { getDatabaseTables } from '@/lib/dev-actions';\nimport { useToast } from '@/hooks/use-toast';\nimport { Database } from 'lucide-react';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\n\n\ninterface DbData {\n  students: any[];\n  managers: any[];\n  owners: any[];\n}\n\nexport function DevDbViewer() {\n  const [data, setData] = useState<DbData | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const handleFetchData = async () => {\n    setIsLoading(true);\n    const result = await getDatabaseTables();\n    setIsLoading(false);\n\n    if (result.success && result.data) {\n      setData(result.data);\n    } else {\n      toast({\n        title: 'Error fetching data',\n        description: result.error,\n        variant: 'destructive',\n      });\n    }\n  };\n\n  return (\n    <Dialog onOpenChange={(open) => {\n        if (open && !data) {\n            handleFetchData();\n        }\n    }}>\n      <DialogTrigger asChild>\n        <Button variant=\"outline\" size=\"sm\">\n            <Database className=\"mr-2 h-4 w-4\" />\n            View Database (Dev)\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"max-w-4xl h-5/6 flex flex-col\">\n        <DialogHeader>\n          <DialogTitle>Database Viewer</DialogTitle>\n          <DialogDescription>\n            Live data from the SQLite database. This is for development purposes only.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"flex-grow min-h-0\">\n          {isLoading && <p className=\"text-center p-8\">Loading database content...</p>}\n          {data && (\n            <Tabs defaultValue=\"students\" className=\"h-full flex flex-col\">\n                <div className=\"flex-shrink-0\">\n                    <TabsList className=\"grid w-full grid-cols-3\">\n                        <TabsTrigger value=\"students\">Students ({data.students.length})</TabsTrigger>\n                        <TabsTrigger value=\"managers\">Managers ({data.managers.length})</TabsTrigger>\n                        <TabsTrigger value=\"owners\">Owners ({data.owners.length})</TabsTrigger>\n                    </TabsList>\n                </div>\n                <div className=\"flex-grow mt-4 min-h-0\">\n                    <TabsContent value=\"students\" className=\"h-full m-0\">\n                        <ScrollArea className=\"h-full pr-4\">\n                            <pre className=\"text-xs bg-muted p-4 rounded-md\">{JSON.stringify(data.students, null, 2)}</pre>\n                        </ScrollArea>\n                    </TabsContent>\n                    <TabsContent value=\"managers\" className=\"h-full m-0\">\n                        <ScrollArea className=\"h-full pr-4\">\n                            <pre className=\"text-xs bg-muted p-4 rounded-md\">{JSON.stringify(data.managers, null, 2)}</pre>\n                        </ScrollArea>\n                    </TabsContent>\n                    <TabsContent value=\"owners\" className=\"h-full m-0\">\n                         <ScrollArea className=\"h-full pr-4\">\n                            <pre className=\"text-xs bg-muted p-4 rounded-md\">{JSON.stringify(data.owners, null, 2)}</pre>\n                        </ScrollArea>\n                    </TabsContent>\n                </div>\n            </Tabs>\n          )}\n        </div>\n        <DialogFooter className=\"mt-4 flex-shrink-0\">\n            <Button onClick={handleFetchData} disabled={isLoading} variant=\"secondary\">\n                {isLoading ? 'Refreshing...' : 'Refresh Data'}\n            </Button>\n            <DialogClose asChild>\n                <Button>Close</Button>\n            </DialogClose>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 847, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/footer.tsx"],"sourcesContent":["'use client';\n\nimport { Utensils } from 'lucide-react';\nimport { DevDbViewer } from '@/components/dev-db-viewer';\n\nexport function Footer() {\n  return (\n    <footer className=\"bg-secondary/50 mt-auto\">\n      <div className=\"container mx-auto py-6 px-4 sm:px-6 lg:px-8 text-center text-foreground/60\">\n        <div className=\"mb-4\">\n          <DevDbViewer />\n        </div>\n        <p>&copy; {new Date().getFullYear()} MessMate. All rights reserved.</p>\n        <div className=\"flex justify-center items-center mt-2\">\n            <Utensils className=\"h-4 w-4 mr-2\" />\n            <span className=\"font-headline\">MessMate</span>\n        </div>\n      </div>\n    </footer>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,SAAS;IACd,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,4IAAA,CAAA,cAAW;;;;;;;;;;8BAEd,6LAAC;;wBAAE;wBAAQ,IAAI,OAAO,WAAW;wBAAG;;;;;;;8BACpC,6LAAC;oBAAI,WAAU;;sCACX,6LAAC,6MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,6LAAC;4BAAK,WAAU;sCAAgB;;;;;;;;;;;;;;;;;;;;;;;AAK5C;KAfgB","debugId":null}},
    {"offset": {"line": 934, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1037, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/animated-background.tsx"],"sourcesContent":["export function AnimatedBackground() {\n  return (\n    <div className=\"area\">\n      <ul className=\"circles\">\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n      </ul>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAO,SAAS;IACd,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAG,WAAU;;8BACZ,6LAAC;;;;;8BACD,6LAAC;;;;;8BACD,6LAAC;;;;;8BACD,6LAAC;;;;;8BACD,6LAAC;;;;;8BACD,6LAAC;;;;;8BACD,6LAAC;;;;;8BACD,6LAAC;;;;;8BACD,6LAAC;;;;;8BACD,6LAAC;;;;;;;;;;;;;;;;AAIT;KAjBgB","debugId":null}},
    {"offset": {"line": 1122, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1158, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1197, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1415, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/login/actions.ts"],"sourcesContent":["\n'use server';\n\nimport * as z from 'zod';\nimport { findStudentByEmail, findManagerByEmail, findOwnerById, isEmailInUse } from '@/lib/db';\n\nconst studentLoginSchema = z.object({\n  email: z.string().email({ message: 'Please enter a valid email.' }),\n  messRegistrationNo: z.string().min(1, { message: 'Mess registration number is required.' }),\n});\n\nconst managerLoginSchema = z.object({\n  email: z.string().email({ message: 'Please enter a valid email.' }),\n  messRegistrationNo: z.string().min(1, { message: 'Mess registration number is required.' }),\n});\n\nconst ownerLoginSchema = z.object({\n  ownerId: z.string().min(1, { message: 'Owner ID is required.' }),\n  messRegistrationNo: z.string().min(1, { message: 'Mess registration number is required.' }),\n});\n\nexport async function loginStudent(data: z.infer<typeof studentLoginSchema>) {\n    const validatedFields = studentLoginSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        return { success: false, error: 'Invalid fields. Please check your input.' };\n    }\n\n    const { email, messRegistrationNo } = validatedFields.data;\n    const student = findStudentByEmail(email);\n\n    if (!student) {\n        // To prevent leaking information about which role an email is registered with,\n        // we can give a generic error. Or a more specific one as requested.\n        const otherRole = isEmailInUse(email, ['manager', 'owner']);\n        if (otherRole) {\n            return { success: false, error: `This email is registered as a ${otherRole}. Please use the correct login tab.` };\n        }\n        return { success: false, error: 'Invalid credentials. Please check your email and registration number.' };\n    }\n\n    if (student.messRegistrationNo.toLowerCase() !== messRegistrationNo.toLowerCase()) {\n        return { success: false, error: 'Invalid credentials. Please check your email and registration number.' };\n    }\n\n    return { success: true, message: 'Login successful!' };\n}\n\nexport async function loginManager(data: z.infer<typeof managerLoginSchema>) {\n    const validatedFields = managerLoginSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        return { success: false, error: 'Invalid fields. Please check your input.' };\n    }\n\n    const { email, messRegistrationNo } = validatedFields.data;\n    const manager = findManagerByEmail(email);\n\n    if (!manager) {\n        const otherRole = isEmailInUse(email, ['student', 'owner']);\n        if (otherRole) {\n            return { success: false, error: `This email is registered as a ${otherRole}. Please use the correct login tab.` };\n        }\n        return { success: false, error: 'Invalid credentials. Please check your email and registration number.' };\n    }\n\n    if (manager.messRegistrationNo.toLowerCase() !== messRegistrationNo.toLowerCase()) {\n        return { success: false, error: 'Invalid credentials. Please check your email and registration number.' };\n    }\n\n    return { success: true, message: 'Login successful!' };\n}\n\nexport async function loginOwner(data: z.infer<typeof ownerLoginSchema>) {\n    const validatedFields = ownerLoginSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        return { success: false, error: 'Invalid fields. Please check your input.' };\n    }\n\n    const { ownerId, messRegistrationNo } = validatedFields.data;\n    const owner = findOwnerById(ownerId);\n\n    if (!owner || owner.messRegistrationNo.toLowerCase() !== messRegistrationNo.toLowerCase()) {\n        return { success: false, error: 'Invalid credentials. Please check your Owner ID and registration number.' };\n    }\n\n    return { success: true, message: 'Login successful!' };\n}\n"],"names":[],"mappings":";;;;;;IAqBsB,eAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1431, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/login/student-login-form.tsx"],"sourcesContent":["\n'use client';\n\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { useToast } from '@/hooks/use-toast';\nimport { useState } from 'react';\nimport { loginStudent } from './actions';\nimport { useRouter } from 'next/navigation';\n\nconst formSchema = z.object({\n  email: z.string().email({ message: 'Please enter a valid email.' }),\n  messRegistrationNo: z.string().min(1, { message: 'Mess registration number is required.' }),\n});\n\nexport function StudentLoginForm() {\n  const { toast } = useToast();\n  const router = useRouter();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      email: '',\n      messRegistrationNo: '',\n    },\n  });\n\n  async function onSubmit(values: z.infer<typeof formSchema>) {\n    setIsLoading(true);\n    const result = await loginStudent(values);\n    setIsLoading(false);\n\n    if (result.success) {\n      toast({\n        title: 'Login Successful!',\n        description: result.message,\n      });\n      router.push('/student/dashboard');\n    } else {\n      toast({\n        title: 'Login Failed',\n        description: result.error,\n        variant: 'destructive',\n      });\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input placeholder=\"student@example.com\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"messRegistrationNo\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Mess Registration No.</FormLabel>\n              <FormControl>\n                <Input placeholder=\"SUNMESS-00001\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n          {isLoading ? 'Logging in...' : 'Login'}\n        </Button>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAXA;;;;;;;;;;;AAaA,MAAM,aAAa,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,EAAE;IAC1B,OAAO,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,KAAK,CAAC;QAAE,SAAS;IAA8B;IACjE,oBAAoB,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;QAAE,SAAS;IAAwC;AAC3F;AAEO,SAAS;;IACd,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,OAAO,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAA8B;QAC/C,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,OAAO;YACP,oBAAoB;QACtB;IACF;IAEA,eAAe,SAAS,MAAkC;QACxD,aAAa;QACb,MAAM,SAAS,MAAM,CAAA,GAAA,8JAAA,CAAA,eAAY,AAAD,EAAE;QAClC,aAAa;QAEb,IAAI,OAAO,OAAO,EAAE;YAClB,MAAM;gBACJ,OAAO;gBACP,aAAa,OAAO,OAAO;YAC7B;YACA,OAAO,IAAI,CAAC;QACd,OAAO;YACL,MAAM;gBACJ,OAAO;gBACP,aAAa,OAAO,KAAK;gBACzB,SAAS;YACX;QACF;IACF;IAEA,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAE,GAAG,IAAI;kBACZ,cAAA,6LAAC;YAAK,UAAU,KAAK,YAAY,CAAC;YAAW,WAAU;;8BACrD,6LAAC,mIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;8CACP,6LAAC,mIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,6LAAC,mIAAA,CAAA,cAAW;8CACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;wCAAC,aAAY;wCAAuB,GAAG,KAAK;;;;;;;;;;;8CAEpD,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,6LAAC,mIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;8CACP,6LAAC,mIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,6LAAC,mIAAA,CAAA,cAAW;8CACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;wCAAC,aAAY;wCAAiB,GAAG,KAAK;;;;;;;;;;;8CAE9C,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,6LAAC,qIAAA,CAAA,SAAM;oBAAC,MAAK;oBAAS,WAAU;oBAAS,UAAU;8BAChD,YAAY,kBAAkB;;;;;;;;;;;;;;;;;AAKzC;GApEgB;;QACI,+HAAA,CAAA,WAAQ;QACX,qIAAA,CAAA,YAAS;QAGX,iKAAA,CAAA,UAAO;;;KALN","debugId":null}},
    {"offset": {"line": 1627, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/login/actions.ts"],"sourcesContent":["\n'use server';\n\nimport * as z from 'zod';\nimport { findStudentByEmail, findManagerByEmail, findOwnerById, isEmailInUse } from '@/lib/db';\n\nconst studentLoginSchema = z.object({\n  email: z.string().email({ message: 'Please enter a valid email.' }),\n  messRegistrationNo: z.string().min(1, { message: 'Mess registration number is required.' }),\n});\n\nconst managerLoginSchema = z.object({\n  email: z.string().email({ message: 'Please enter a valid email.' }),\n  messRegistrationNo: z.string().min(1, { message: 'Mess registration number is required.' }),\n});\n\nconst ownerLoginSchema = z.object({\n  ownerId: z.string().min(1, { message: 'Owner ID is required.' }),\n  messRegistrationNo: z.string().min(1, { message: 'Mess registration number is required.' }),\n});\n\nexport async function loginStudent(data: z.infer<typeof studentLoginSchema>) {\n    const validatedFields = studentLoginSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        return { success: false, error: 'Invalid fields. Please check your input.' };\n    }\n\n    const { email, messRegistrationNo } = validatedFields.data;\n    const student = findStudentByEmail(email);\n\n    if (!student) {\n        // To prevent leaking information about which role an email is registered with,\n        // we can give a generic error. Or a more specific one as requested.\n        const otherRole = isEmailInUse(email, ['manager', 'owner']);\n        if (otherRole) {\n            return { success: false, error: `This email is registered as a ${otherRole}. Please use the correct login tab.` };\n        }\n        return { success: false, error: 'Invalid credentials. Please check your email and registration number.' };\n    }\n\n    if (student.messRegistrationNo.toLowerCase() !== messRegistrationNo.toLowerCase()) {\n        return { success: false, error: 'Invalid credentials. Please check your email and registration number.' };\n    }\n\n    return { success: true, message: 'Login successful!' };\n}\n\nexport async function loginManager(data: z.infer<typeof managerLoginSchema>) {\n    const validatedFields = managerLoginSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        return { success: false, error: 'Invalid fields. Please check your input.' };\n    }\n\n    const { email, messRegistrationNo } = validatedFields.data;\n    const manager = findManagerByEmail(email);\n\n    if (!manager) {\n        const otherRole = isEmailInUse(email, ['student', 'owner']);\n        if (otherRole) {\n            return { success: false, error: `This email is registered as a ${otherRole}. Please use the correct login tab.` };\n        }\n        return { success: false, error: 'Invalid credentials. Please check your email and registration number.' };\n    }\n\n    if (manager.messRegistrationNo.toLowerCase() !== messRegistrationNo.toLowerCase()) {\n        return { success: false, error: 'Invalid credentials. Please check your email and registration number.' };\n    }\n\n    return { success: true, message: 'Login successful!' };\n}\n\nexport async function loginOwner(data: z.infer<typeof ownerLoginSchema>) {\n    const validatedFields = ownerLoginSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        return { success: false, error: 'Invalid fields. Please check your input.' };\n    }\n\n    const { ownerId, messRegistrationNo } = validatedFields.data;\n    const owner = findOwnerById(ownerId);\n\n    if (!owner || owner.messRegistrationNo.toLowerCase() !== messRegistrationNo.toLowerCase()) {\n        return { success: false, error: 'Invalid credentials. Please check your Owner ID and registration number.' };\n    }\n\n    return { success: true, message: 'Login successful!' };\n}\n"],"names":[],"mappings":";;;;;;IAgDsB,eAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1643, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/login/manager-login-form.tsx"],"sourcesContent":["\n'use client';\n\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { useToast } from '@/hooks/use-toast';\nimport { useState } from 'react';\nimport { loginManager } from './actions';\nimport { useRouter } from 'next/navigation';\n\nconst formSchema = z.object({\n  email: z.string().email({ message: 'Please enter a valid email.' }),\n  messRegistrationNo: z.string().min(1, { message: 'Mess registration number is required.' }),\n});\n\nexport function ManagerLoginForm() {\n  const { toast } = useToast();\n  const router = useRouter();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      email: '',\n      messRegistrationNo: '',\n    },\n  });\n\n  async function onSubmit(values: z.infer<typeof formSchema>) {\n    setIsLoading(true);\n    const result = await loginManager(values);\n    setIsLoading(false);\n\n    if (result.success) {\n      toast({\n        title: 'Login Successful!',\n        description: result.message,\n      });\n      router.push('/manager/dashboard');\n    } else {\n      toast({\n        title: 'Login Failed',\n        description: result.error,\n        variant: 'destructive',\n      });\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input placeholder=\"manager@example.com\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"messRegistrationNo\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Mess Registration No.</FormLabel>\n              <FormControl>\n                <Input placeholder=\"SUNMESS-00001\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n          {isLoading ? 'Logging in...' : 'Login'}\n        </Button>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAXA;;;;;;;;;;;AAaA,MAAM,aAAa,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,EAAE;IAC1B,OAAO,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,KAAK,CAAC;QAAE,SAAS;IAA8B;IACjE,oBAAoB,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;QAAE,SAAS;IAAwC;AAC3F;AAEO,SAAS;;IACd,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,OAAO,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAA8B;QAC/C,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,OAAO;YACP,oBAAoB;QACtB;IACF;IAEA,eAAe,SAAS,MAAkC;QACxD,aAAa;QACb,MAAM,SAAS,MAAM,CAAA,GAAA,8JAAA,CAAA,eAAY,AAAD,EAAE;QAClC,aAAa;QAEb,IAAI,OAAO,OAAO,EAAE;YAClB,MAAM;gBACJ,OAAO;gBACP,aAAa,OAAO,OAAO;YAC7B;YACA,OAAO,IAAI,CAAC;QACd,OAAO;YACL,MAAM;gBACJ,OAAO;gBACP,aAAa,OAAO,KAAK;gBACzB,SAAS;YACX;QACF;IACF;IAEA,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAE,GAAG,IAAI;kBACZ,cAAA,6LAAC;YAAK,UAAU,KAAK,YAAY,CAAC;YAAW,WAAU;;8BACrD,6LAAC,mIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;8CACP,6LAAC,mIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,6LAAC,mIAAA,CAAA,cAAW;8CACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;wCAAC,aAAY;wCAAuB,GAAG,KAAK;;;;;;;;;;;8CAEpD,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,6LAAC,mIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;8CACP,6LAAC,mIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,6LAAC,mIAAA,CAAA,cAAW;8CACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;wCAAC,aAAY;wCAAiB,GAAG,KAAK;;;;;;;;;;;8CAE9C,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,6LAAC,qIAAA,CAAA,SAAM;oBAAC,MAAK;oBAAS,WAAU;oBAAS,UAAU;8BAChD,YAAY,kBAAkB;;;;;;;;;;;;;;;;;AAKzC;GApEgB;;QACI,+HAAA,CAAA,WAAQ;QACX,qIAAA,CAAA,YAAS;QAGX,iKAAA,CAAA,UAAO;;;KALN","debugId":null}},
    {"offset": {"line": 1839, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/login/actions.ts"],"sourcesContent":["\n'use server';\n\nimport * as z from 'zod';\nimport { findStudentByEmail, findManagerByEmail, findOwnerById, isEmailInUse } from '@/lib/db';\n\nconst studentLoginSchema = z.object({\n  email: z.string().email({ message: 'Please enter a valid email.' }),\n  messRegistrationNo: z.string().min(1, { message: 'Mess registration number is required.' }),\n});\n\nconst managerLoginSchema = z.object({\n  email: z.string().email({ message: 'Please enter a valid email.' }),\n  messRegistrationNo: z.string().min(1, { message: 'Mess registration number is required.' }),\n});\n\nconst ownerLoginSchema = z.object({\n  ownerId: z.string().min(1, { message: 'Owner ID is required.' }),\n  messRegistrationNo: z.string().min(1, { message: 'Mess registration number is required.' }),\n});\n\nexport async function loginStudent(data: z.infer<typeof studentLoginSchema>) {\n    const validatedFields = studentLoginSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        return { success: false, error: 'Invalid fields. Please check your input.' };\n    }\n\n    const { email, messRegistrationNo } = validatedFields.data;\n    const student = findStudentByEmail(email);\n\n    if (!student) {\n        // To prevent leaking information about which role an email is registered with,\n        // we can give a generic error. Or a more specific one as requested.\n        const otherRole = isEmailInUse(email, ['manager', 'owner']);\n        if (otherRole) {\n            return { success: false, error: `This email is registered as a ${otherRole}. Please use the correct login tab.` };\n        }\n        return { success: false, error: 'Invalid credentials. Please check your email and registration number.' };\n    }\n\n    if (student.messRegistrationNo.toLowerCase() !== messRegistrationNo.toLowerCase()) {\n        return { success: false, error: 'Invalid credentials. Please check your email and registration number.' };\n    }\n\n    return { success: true, message: 'Login successful!' };\n}\n\nexport async function loginManager(data: z.infer<typeof managerLoginSchema>) {\n    const validatedFields = managerLoginSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        return { success: false, error: 'Invalid fields. Please check your input.' };\n    }\n\n    const { email, messRegistrationNo } = validatedFields.data;\n    const manager = findManagerByEmail(email);\n\n    if (!manager) {\n        const otherRole = isEmailInUse(email, ['student', 'owner']);\n        if (otherRole) {\n            return { success: false, error: `This email is registered as a ${otherRole}. Please use the correct login tab.` };\n        }\n        return { success: false, error: 'Invalid credentials. Please check your email and registration number.' };\n    }\n\n    if (manager.messRegistrationNo.toLowerCase() !== messRegistrationNo.toLowerCase()) {\n        return { success: false, error: 'Invalid credentials. Please check your email and registration number.' };\n    }\n\n    return { success: true, message: 'Login successful!' };\n}\n\nexport async function loginOwner(data: z.infer<typeof ownerLoginSchema>) {\n    const validatedFields = ownerLoginSchema.safeParse(data);\n\n    if (!validatedFields.success) {\n        return { success: false, error: 'Invalid fields. Please check your input.' };\n    }\n\n    const { ownerId, messRegistrationNo } = validatedFields.data;\n    const owner = findOwnerById(ownerId);\n\n    if (!owner || owner.messRegistrationNo.toLowerCase() !== messRegistrationNo.toLowerCase()) {\n        return { success: false, error: 'Invalid credentials. Please check your Owner ID and registration number.' };\n    }\n\n    return { success: true, message: 'Login successful!' };\n}\n"],"names":[],"mappings":";;;;;;IAyEsB,aAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1855, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/login/owner-login-form.tsx"],"sourcesContent":["\n'use client';\n\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { useToast } from '@/hooks/use-toast';\nimport { useState } from 'react';\nimport { loginOwner } from './actions';\nimport { useRouter } from 'next/navigation';\n\nconst formSchema = z.object({\n    ownerId: z.string().min(1, { message: 'Owner ID is required.' }),\n    messRegistrationNo: z.string().min(1, { message: 'Mess registration number is required.' }),\n});\n\nexport function OwnerLoginForm() {\n  const { toast } = useToast();\n  const router = useRouter();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      ownerId: '',\n      messRegistrationNo: '',\n    },\n  });\n\n  async function onSubmit(values: z.infer<typeof formSchema>) {\n    setIsLoading(true);\n    const result = await loginOwner(values);\n    setIsLoading(false);\n\n    if (result.success) {\n      toast({\n        title: 'Login Successful!',\n        description: result.message,\n      });\n      router.push('/owner/dashboard');\n    } else {\n      toast({\n        title: 'Login Failed',\n        description: result.error,\n        variant: 'destructive',\n      });\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        <FormField\n          control={form.control}\n          name=\"ownerId\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Owner ID</FormLabel>\n              <FormControl>\n                <Input placeholder=\"ALEX-00001\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"messRegistrationNo\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Mess Registration No.</FormLabel>\n              <FormControl>\n                <Input placeholder=\"ALEXSKITCHEN-00001\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n          {isLoading ? 'Logging in...' : 'Login'}\n        </Button>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAXA;;;;;;;;;;;AAaA,MAAM,aAAa,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,EAAE;IACxB,SAAS,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;QAAE,SAAS;IAAwB;IAC9D,oBAAoB,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;QAAE,SAAS;IAAwC;AAC7F;AAEO,SAAS;;IACd,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,OAAO,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAA8B;QAC/C,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,SAAS;YACT,oBAAoB;QACtB;IACF;IAEA,eAAe,SAAS,MAAkC;QACxD,aAAa;QACb,MAAM,SAAS,MAAM,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD,EAAE;QAChC,aAAa;QAEb,IAAI,OAAO,OAAO,EAAE;YAClB,MAAM;gBACJ,OAAO;gBACP,aAAa,OAAO,OAAO;YAC7B;YACA,OAAO,IAAI,CAAC;QACd,OAAO;YACL,MAAM;gBACJ,OAAO;gBACP,aAAa,OAAO,KAAK;gBACzB,SAAS;YACX;QACF;IACF;IAEA,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAE,GAAG,IAAI;kBACZ,cAAA,6LAAC;YAAK,UAAU,KAAK,YAAY,CAAC;YAAW,WAAU;;8BACrD,6LAAC,mIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;8CACP,6LAAC,mIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,6LAAC,mIAAA,CAAA,cAAW;8CACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;wCAAC,aAAY;wCAAc,GAAG,KAAK;;;;;;;;;;;8CAE3C,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,6LAAC,mIAAA,CAAA,YAAS;oBACR,SAAS,KAAK,OAAO;oBACrB,MAAK;oBACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;8CACP,6LAAC,mIAAA,CAAA,YAAS;8CAAC;;;;;;8CACX,6LAAC,mIAAA,CAAA,cAAW;8CACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;wCAAC,aAAY;wCAAsB,GAAG,KAAK;;;;;;;;;;;8CAEnD,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8BAIlB,6LAAC,qIAAA,CAAA,SAAM;oBAAC,MAAK;oBAAS,WAAU;oBAAS,UAAU;8BAChD,YAAY,kBAAkB;;;;;;;;;;;;;;;;;AAKzC;GApEgB;;QACI,+HAAA,CAAA,WAAQ;QACX,qIAAA,CAAA,YAAS;QAGX,iKAAA,CAAA,UAAO;;;KALN","debugId":null}},
    {"offset": {"line": 2051, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/login/page.tsx"],"sourcesContent":["\n'use client';\n\nimport Link from 'next/link';\nimport { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { AnimatedBackground } from '@/components/animated-background';\nimport { StudentLoginForm } from './student-login-form';\nimport { ManagerLoginForm } from './manager-login-form';\nimport { OwnerLoginForm } from './owner-login-form';\n\nexport default function LoginPage() {\n  return (\n    <div className=\"flex flex-col min-h-screen\">\n      <AnimatedBackground />\n      <Header />\n      <main className=\"flex-grow flex items-center justify-center p-4\">\n        <Card className=\"w-full max-w-md\">\n          <CardHeader className=\"text-center\">\n            <CardTitle className=\"text-2xl font-headline\">Login</CardTitle>\n            <CardDescription>Select your role to sign in</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Tabs defaultValue=\"student\" className=\"w-full\">\n              <TabsList className=\"grid w-full grid-cols-3\">\n                <TabsTrigger value=\"student\">Student</TabsTrigger>\n                <TabsTrigger value=\"manager\">Manager</TabsTrigger>\n                <TabsTrigger value=\"owner\">Owner</TabsTrigger>\n              </TabsList>\n              <TabsContent value=\"student\" className=\"mt-4\">\n                <StudentLoginForm />\n              </TabsContent>\n              <TabsContent value=\"manager\" className=\"mt-4\">\n                <ManagerLoginForm />\n              </TabsContent>\n              <TabsContent value=\"owner\" className=\"mt-4\">\n                <OwnerLoginForm />\n              </TabsContent>\n            </Tabs>\n            <div className=\"mt-4 text-center text-sm\">\n              Don't have an account?{\" \"}\n              <Link href=\"/register\" className=\"underline\">\n                Register\n              </Link>\n            </div>\n          </CardContent>\n        </Card>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;;;;;;;;;;;AAYe,SAAS;IACtB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,+IAAA,CAAA,qBAAkB;;;;;0BACnB,6LAAC,+HAAA,CAAA,SAAM;;;;;0BACP,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,mIAAA,CAAA,OAAI;oBAAC,WAAU;;sCACd,6LAAC,mIAAA,CAAA,aAAU;4BAAC,WAAU;;8CACpB,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAyB;;;;;;8CAC9C,6LAAC,mIAAA,CAAA,kBAAe;8CAAC;;;;;;;;;;;;sCAEnB,6LAAC,mIAAA,CAAA,cAAW;;8CACV,6LAAC,mIAAA,CAAA,OAAI;oCAAC,cAAa;oCAAU,WAAU;;sDACrC,6LAAC,mIAAA,CAAA,WAAQ;4CAAC,WAAU;;8DAClB,6LAAC,mIAAA,CAAA,cAAW;oDAAC,OAAM;8DAAU;;;;;;8DAC7B,6LAAC,mIAAA,CAAA,cAAW;oDAAC,OAAM;8DAAU;;;;;;8DAC7B,6LAAC,mIAAA,CAAA,cAAW;oDAAC,OAAM;8DAAQ;;;;;;;;;;;;sDAE7B,6LAAC,mIAAA,CAAA,cAAW;4CAAC,OAAM;4CAAU,WAAU;sDACrC,cAAA,6LAAC,mJAAA,CAAA,mBAAgB;;;;;;;;;;sDAEnB,6LAAC,mIAAA,CAAA,cAAW;4CAAC,OAAM;4CAAU,WAAU;sDACrC,cAAA,6LAAC,mJAAA,CAAA,mBAAgB;;;;;;;;;;sDAEnB,6LAAC,mIAAA,CAAA,cAAW;4CAAC,OAAM;4CAAQ,WAAU;sDACnC,cAAA,6LAAC,iJAAA,CAAA,iBAAc;;;;;;;;;;;;;;;;8CAGnB,6LAAC;oCAAI,WAAU;;wCAA2B;wCACjB;sDACvB,6LAAC,+JAAA,CAAA,UAAI;4CAAC,MAAK;4CAAY,WAAU;sDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOrD,6LAAC,+HAAA,CAAA,SAAM;;;;;;;;;;;AAGb;KAxCwB","debugId":null}}]
}