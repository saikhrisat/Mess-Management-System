{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjC,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIhE,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border bg-background/90 backdrop-blur-sm px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex flex-wrap items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":";;;;;;;;;AAGA;AACA;AAAA;AAAA;AAEA;AALA;;;;;AAOA,uCAAuC;AACvC,MAAM,SAAS;IAAE,OAAO;IAAI,MAAM;AAAQ;AAgB1C,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EAA4B;AAEnE,SAAS;IACP,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;IAEjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;AAEA,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAQpC,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,OAAO,EAAE;IAChD,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,QAAW,AAAD;IAC3B,MAAM,UAAU,CAAC,MAAM,EAAE,MAAM,SAAS,OAAO,CAAC,MAAM,KAAK;IAE3D,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;QAAO;kBACrC,cAAA,8OAAC;YACC,cAAY;YACZ,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,ypBACA;YAED,GAAG,KAAK;;8BAET,8OAAC;oBAAW,IAAI;oBAAS,QAAQ;;;;;;8BACjC,8OAAC,mKAAA,CAAA,sBAAqC;8BACnC;;;;;;;;;;;;;;;;;AAKX;AACA,eAAe,WAAW,GAAG;AAE7B,MAAM,aAAa,CAAC,EAAE,EAAE,EAAE,MAAM,EAAuC;IACrE,MAAM,cAAc,OAAO,OAAO,CAAC,QAAQ,MAAM,CAC/C,CAAC,GAAG,OAAO,GAAK,OAAO,KAAK,IAAI,OAAO,KAAK;IAG9C,IAAI,CAAC,YAAY,MAAM,EAAE;QACvB,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,yBAAyB;YACvB,QAAQ,OAAO,OAAO,CAAC,QACpB,GAAG,CACF,CAAC,CAAC,OAAO,OAAO,GAAK,CAAC;AAClC,EAAE,OAAO,aAAa,EAAE,GAAG;AAC3B,EAAE,YACC,GAAG,CAAC,CAAC,CAAC,KAAK,WAAW;oBACrB,MAAM,QACJ,WAAW,KAAK,EAAE,CAAC,MAAuC,IAC1D,WAAW,KAAK;oBAClB,OAAO,QAAQ,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG;gBACjD,GACC,IAAI,CAAC,MAAM;;AAEd,CAAC,EAEU,IAAI,CAAC;QACV;;;;;;AAGN;AAEA,MAAM,eAAe,uJAAA,CAAA,UAAyB;AAE9C,MAAM,oCAAsB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAWzC,CACE,EACE,MAAM,EACN,OAAO,EACP,SAAS,EACT,YAAY,KAAK,EACjB,YAAY,KAAK,EACjB,gBAAgB,KAAK,EACrB,KAAK,EACL,cAAc,EACd,cAAc,EACd,SAAS,EACT,KAAK,EACL,OAAO,EACP,QAAQ,EACT,EACD;IAEA,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,UAAa,AAAD,EAAE;QACjC,IAAI,aAAa,CAAC,SAAS,QAAQ;YACjC,OAAO;QACT;QAEA,MAAM,CAAC,KAAK,GAAG;QACf,MAAM,MAAM,GAAG,YAAY,KAAK,OAAO,IAAI,KAAK,IAAI,IAAI,SAAS;QACjE,MAAM,aAAa,4BAA4B,QAAQ,MAAM;QAC7D,MAAM,QACJ,CAAC,YAAY,OAAO,UAAU,WAC1B,MAAM,CAAC,MAA6B,EAAE,SAAS,QAC/C,YAAY;QAElB,IAAI,gBAAgB;YAClB,qBACE,8OAAC;gBAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;0BAC/B,eAAe,OAAO;;;;;;QAG7B;QAEA,IAAI,CAAC,OAAO;YACV,OAAO;QACT;QAEA,qBAAO,8OAAC;YAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;sBAAkB;;;;;;IAC7D,GAAG;QACD;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,IAAI,CAAC,UAAU,CAAC,SAAS,QAAQ;QAC/B,OAAO;IACT;IAEA,MAAM,YAAY,QAAQ,MAAM,KAAK,KAAK,cAAc;IAExD,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6HACA;;YAGD,CAAC,YAAY,eAAe;0BAC7B,8OAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,MAAM;oBAClB,MAAM,MAAM,GAAG,WAAW,KAAK,IAAI,IAAI,KAAK,OAAO,IAAI,SAAS;oBAChE,MAAM,aAAa,4BAA4B,QAAQ,MAAM;oBAC7D,MAAM,iBAAiB,SAAS,KAAK,OAAO,CAAC,IAAI,IAAI,KAAK,KAAK;oBAE/D,qBACE,8OAAC;wBAEC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uGACA,cAAc,SAAS;kCAGxB,aAAa,MAAM,UAAU,aAAa,KAAK,IAAI,GAClD,UAAU,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,MAAM,OAAO,KAAK,OAAO,kBAE1D;;gCACG,YAAY,qBACX,8OAAC,WAAW,IAAI;;;;2CAEhB,CAAC,+BACC,8OAAC;oCACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;wCACE,eAAe,cAAc;wCAC7B,OAAO,cAAc;wCACrB,mDACE,cAAc;wCAChB,UAAU,aAAa,cAAc;oCACvC;oCAEF,OACE;wCACE,cAAc;wCACd,kBAAkB;oCACpB;;;;;;8CAKR,8OAAC;oCACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4CACA,YAAY,cAAc;;sDAG5B,8OAAC;4CAAI,WAAU;;gDACZ,YAAY,eAAe;8DAC5B,8OAAC;oDAAK,WAAU;8DACb,YAAY,SAAS,KAAK,IAAI;;;;;;;;;;;;wCAGlC,KAAK,KAAK,kBACT,8OAAC;4CAAK,WAAU;sDACb,KAAK,KAAK,CAAC,cAAc;;;;;;;;;;;;;;uBAhD/B,KAAK,OAAO;;;;;gBAwDvB;;;;;;;;;;;;AAIR;AAEF,oBAAoB,WAAW,GAAG;AAElC,MAAM,cAAc,sJAAA,CAAA,SAAwB;AAE5C,MAAM,mCAAqB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAQxC,CACE,EAAE,SAAS,EAAE,WAAW,KAAK,EAAE,OAAO,EAAE,gBAAgB,QAAQ,EAAE,OAAO,EAAE,EAC3E;IAEA,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,IAAI,CAAC,SAAS,QAAQ;QACpB,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oDACA,kBAAkB,QAAQ,SAAS,QACnC;kBAGD,QAAQ,GAAG,CAAC,CAAC;YACZ,MAAM,MAAM,GAAG,WAAW,KAAK,OAAO,IAAI,SAAS;YACnD,MAAM,aAAa,4BAA4B,QAAQ,MAAM;YAE7D,qBACE,8OAAC;gBAEC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;oBAGD,YAAY,QAAQ,CAAC,yBACpB,8OAAC,WAAW,IAAI;;;;6CAEhB,8OAAC;wBACC,WAAU;wBACV,OAAO;4BACL,iBAAiB,KAAK,KAAK;wBAC7B;;;;;;oBAGH,YAAY;;eAfR,KAAK,KAAK;;;;;QAkBrB;;;;;;AAGN;AAEF,mBAAmB,WAAW,GAAG;AAEjC,gDAAgD;AAChD,SAAS,4BACP,MAAmB,EACnB,OAAgB,EAChB,GAAW;IAEX,IAAI,OAAO,YAAY,YAAY,YAAY,MAAM;QACnD,OAAO;IACT;IAEA,MAAM,iBACJ,aAAa,WACb,OAAO,QAAQ,OAAO,KAAK,YAC3B,QAAQ,OAAO,KAAK,OAChB,QAAQ,OAAO,GACf;IAEN,IAAI,iBAAyB;IAE7B,IACE,OAAO,WACP,OAAO,OAAO,CAAC,IAA4B,KAAK,UAChD;QACA,iBAAiB,OAAO,CAAC,IAA4B;IACvD,OAAO,IACL,kBACA,OAAO,kBACP,OAAO,cAAc,CAAC,IAAmC,KAAK,UAC9D;QACA,iBAAiB,cAAc,CAC7B,IACD;IACH;IAEA,OAAO,kBAAkB,SACrB,MAAM,CAAC,eAAe,GACtB,MAAM,CAAC,IAA2B;AACxC","debugId":null}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/student/dashboard/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useMemo, useState, useEffect } from 'react';\nimport {\n  Bell,\n  Cookie,\n  IndianRupee,\n  CalendarDays,\n  Utensils,\n  PieChart as PieChartIcon,\n  BookUser,\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Separator } from '@/components/ui/separator';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip } from 'recharts';\nimport type { ChartConfig } from '@/components/ui/chart';\nimport { ChartContainer, ChartTooltipContent } from '@/components/ui/chart';\n\n// --- Data & Calculation Constants ---\nconst utilitiesData = [\n  { name: 'Groceries & Food', value: 45000, color: 'hsl(var(--chart-1))' },\n  { name: 'Cooking Gas (LPG)', value: 6000, color: 'hsl(var(--chart-2))' },\n  { name: 'Maid & Cook Salary', value: 18000, color: 'hsl(var(--chart-3))' },\n  { name: 'Drinking Water', value: 3000, color: 'hsl(var(--chart-4))' },\n  { name: 'Wi-Fi Charges', value: 1500, color: 'hsl(var(--chart-5))' },\n];\nconst infrastructureData = [\n  { name: 'Mess Rent', value: 25000, color: 'hsl(340, 80%, 60%)' },\n  { name: 'Electricity Bill', value: 8000, color: 'hsl(200, 80%, 60%)' },\n  { name: 'Cleaning Supplies', value: 2000, color: 'hsl(100, 80%, 60%)' },\n];\nconst allExpenses = [...utilitiesData, ...infrastructureData];\n\nconst TOTAL_STUDENTS = 35;\nconst MEALS_PER_DAY = 3;\n\nconst chartConfig = {} satisfies ChartConfig;\nallExpenses.forEach(item => {\n    chartConfig[item.name] = { label: item.name, color: item.color };\n});\n\n\n// --- Loading Skeleton ---\nconst DashboardSkeleton = () => (\n    <div className=\"space-y-8 animate-pulse\">\n        <div className=\"flex items-center justify-between space-y-2\">\n            <Skeleton className=\"h-10 w-1/2 rounded-lg\" />\n        </div>\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n            <Skeleton className=\"h-28 rounded-lg\" />\n            <Skeleton className=\"h-28 rounded-lg\" />\n            <Skeleton className=\"h-28 rounded-lg\" />\n            <Skeleton className=\"h-28 rounded-lg\" />\n        </div>\n        <div className=\"grid gap-8 md:grid-cols-1 lg:grid-cols-3\">\n            <Skeleton className=\"lg:col-span-2 h-96 rounded-lg\" />\n            <Skeleton className=\"lg:col-span-1 h-96 rounded-lg\" />\n        </div>\n    </div>\n);\n\n// --- Reusable StatCard Component ---\nconst StatCard = ({ icon: Icon, title, value, description }: { icon: React.ElementType, title: string, value: string, description: string }) => (\n    <Card className=\"bg-card/80 backdrop-blur-sm shadow-xl border-0 transform transition-transform duration-300 hover:-translate-y-1\">\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\n            <Icon className=\"h-5 w-5 text-muted-foreground\" />\n        </CardHeader>\n        <CardContent>\n            <div className=\"text-2xl font-bold font-headline\">{value}</div>\n            <p className=\"text-xs text-muted-foreground\">{description}</p>\n        </CardContent>\n    </Card>\n);\n\n// --- Main Dashboard Page Component ---\nexport default function StudentDashboardPage() {\n  const [isClient, setIsClient] = useState(false);\n  const [studentName, setStudentName] = useState('Student');\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\n\n  useEffect(() => {\n    setIsClient(true);\n    const updateStudentName = () => {\n      const name = localStorage.getItem('studentName');\n      if (name) {\n          setStudentName(name);\n      }\n    };\n    updateStudentName();\n\n    window.addEventListener('storageChange', updateStudentName);\n    \n    return () => {\n        window.removeEventListener('storageChange', updateStudentName);\n    };\n  }, []);\n\n  const dashboardData = useMemo(() => {\n    if (!isClient) return null;\n\n    const totalMonthlyCost = allExpenses.reduce((acc, item) => acc + item.value, 0);\n    const yourShare = totalMonthlyCost / TOTAL_STUDENTS;\n    const costPerMeal = totalMonthlyCost / (TOTAL_STUDENTS * MEALS_PER_DAY * 30);\n\n    const totalMealsTaken = Math.floor(Math.random() * 60) + 15;\n    const consumptionPercentage = (totalMealsTaken / (MEALS_PER_DAY * 30)) * 100;\n\n    return {\n      yourShare,\n      costPerMeal,\n      totalMealsTaken,\n      consumptionPercentage,\n    };\n  }, [isClient]);\n\n  const announcements = [\n    { title: \"Mess fees due for July\", description: \"Please pay your mess fees by the 10th of July.\", date: \"July 1, 2024\" },\n    { title: \"Special Dinner on Sunday\", description: \"Join us for a special dinner this Sunday to celebrate the festival.\", date: \"June 28, 2024\" },\n    { title: \"New water cooler installed\", description: \"A new water cooler has been installed near the dining hall.\", date: \"June 25, 2024\" },\n  ];\n  \n  if (!isClient || !dashboardData) {\n      return <DashboardSkeleton />;\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"flex items-center justify-between space-y-2\">\n        <h1 className=\"text-3xl md:text-4xl font-bold font-headline tracking-tight\">Welcome, {studentName}!</h1>\n      </div>\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n        <StatCard \n          icon={IndianRupee} \n          title=\"Pending Dues\" \n          value={`₹${dashboardData.yourShare.toFixed(2)}`}\n          description=\"This month's total share\" \n        />\n        <StatCard \n          icon={Cookie} \n          title=\"Today's Special\" \n          value=\"Special Thali\" \n          description=\"Available for lunch\" \n        />\n        <StatCard\n          icon={Utensils}\n          title=\"Average Cost Per Meal\"\n          value={`₹${dashboardData.costPerMeal.toFixed(2)}`}\n          description=\"Based on monthly expenses\"\n        />\n        <Card className=\"bg-card/80 backdrop-blur-sm shadow-xl border-0 transform transition-transform duration-300 hover:-translate-y-1 flex flex-col justify-center\">\n            <CardContent className=\"pt-6\">\n                <Button className=\"w-full font-bold\">\n                    <CalendarDays className=\"mr-2 h-4 w-4\" /> Apply for Leave\n                </Button>\n            </CardContent>\n        </Card>\n      </div>\n      <div className=\"flex flex-col lg:flex-row gap-8\">\n        <div className=\"w-full lg:w-2/3\">\n          <Card className=\"bg-card/80 backdrop-blur-sm shadow-xl border-0 h-full\">\n              <CardHeader>\n                  <CardTitle className=\"text-2xl font-headline\">This Month's Analytics</CardTitle>\n                  <CardDescription>An overview of your meal consumption and mess expenses.</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                  <div className=\"p-4 rounded-lg bg-muted/50\">\n                      <h3 className=\"text-lg font-semibold font-headline flex items-center gap-2 mb-2\">\n                          <BookUser className=\"h-5 w-5 text-primary\" />\n                          Meal Consumption\n                      </h3>\n                      <div className=\"text-center\">\n                          <span className=\"text-5xl font-bold font-headline text-primary\">{dashboardData.totalMealsTaken}</span>\n                          <span className=\"text-lg text-muted-foreground\"> / 90 meals</span>\n                      </div>\n                      <Progress value={dashboardData.consumptionPercentage} className=\"h-3 mt-2\" />\n                      <p className=\"text-center text-xs text-muted-foreground mt-2\">You have consumed {dashboardData.consumptionPercentage.toFixed(0)}% of your meals this month.</p>\n                  </div>\n                  \n                  <Separator />\n                  \n                  <div>\n                      <h3 className=\"text-lg font-semibold font-headline flex items-center gap-2 mb-2\">\n                          <PieChartIcon className=\"h-5 w-5 text-primary\" />\n                          Expense Distribution\n                      </h3>\n                      <div className=\"h-[20rem] w-full\">\n                          <ChartContainer config={chartConfig} className=\"w-full h-full\">\n                              <ResponsiveContainer>\n                                  <PieChart>\n                                      <Tooltip content={<ChartTooltipContent nameKey=\"name\" hideLabel />} />\n                                      <Pie \n                                          data={allExpenses} \n                                          dataKey=\"value\" \n                                          nameKey=\"name\" \n                                          cx=\"50%\" \n                                          cy=\"50%\" \n                                          innerRadius={60} \n                                          strokeWidth={2}\n                                          onMouseEnter={(_, index) => setActiveIndex(index)}\n                                          onMouseLeave={() => setActiveIndex(null)}\n                                      >\n                                          {allExpenses.map((entry, index) => (\n                                              <Cell \n                                                key={`cell-${entry.name}`} \n                                                fill={entry.color} \n                                                className={`recharts-sector ${activeIndex === index ? 'pie-sector-active' : ''}`}\n                                              />\n                                          ))}\n                                      </Pie>\n                                  </PieChart>\n                              </ResponsiveContainer>\n                          </ChartContainer>\n                      </div>\n                  </div>\n              </CardContent>\n          </Card>\n        </div>\n        \n        <div className=\"w-full lg:w-1/3\">\n          <Card className=\"bg-card/80 backdrop-blur-sm shadow-xl border-0 h-full\">\n            <CardHeader>\n              <CardTitle className=\"text-2xl font-headline\">Announcements</CardTitle>\n              <CardDescription>Important updates from the mess management.</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-6\">\n                {announcements.map((ann, index) => (\n                  <div key={index} className=\"flex items-start space-x-4\">\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"flex h-10 w-10 items-center justify-center rounded-full bg-primary/10 text-primary\">\n                        <Bell className=\"h-5 w-5\" />\n                      </div>\n                    </div>\n                    <div className={`flex-1 ${index < announcements.length - 1 ? 'border-b border-border pb-6' : ''}`}>\n                      <p className=\"font-bold text-base\">{ann.title}</p>\n                      <p className=\"text-sm text-muted-foreground\">{ann.description}</p>\n                      <p className=\"text-xs text-muted-foreground mt-2\">{ann.date}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}